# ============================================
# Diamond generator
# Utile du point de vue des directions
# "1 north of, 1 south of, etc."
# Réalisé pour : Foxy | Requière : Skript
# ============================================

options:
    diamondGeneratorName: Générateur de diamants

command /generateur_diamants:
    trigger:
        give a dispenser named "{@diamondGeneratorName}" to player
        
on place:
    if name of player's tool is "{@diamondGeneratorName}":
        add event-location to {diamondGeneratorBlocks::*}

on break:
    loop {diamondGeneratorBlocks::*}:
        if event-block's location is loop-value:
            delete {diamondGeneratorBlocks::%loop-index%}
            chance of 50%:
                give a dispenser named "{@diamondGeneratorName}" to player
        
every 3 seconds:
    set {_cardinalPoints::*} to north, south, east, west, above, below
    set {_directions::*} to 1 north of, 1 south of, 1 east of, 1 west of, above, below
    loop {diamondGeneratorBlocks::*}:
        loop {_cardinalPoints::*}:
            if facing of block at loop-value-1 is {_cardinalPoints::%loop-index-2%}:
                drop 1 diamond at location of block {_directions::%loop-index-2%} block at loop-value-1



# ============================================
# Récupération d'un mob spawner avec le bon mob
# Réalisé pour : Xamez | Requière : Skript, Sk-NBeeT
# ============================================

on right click with mob spawner:
    broadcast "&2%nbt of player's tool%"
        
on break of mob spawner:
    if player's tool is enchanted with silk touch:
        loop entities in radius 3 around event-location:
            kill loop-entity
        set {_nbt} to nbt of event-block
        give a mob spawner with nbt {_nbt} to player
        
on place of mob spawner:
    set {_nbt} to nbt of player's tool
    set nbt of event-block to {_nbt}	
	

		
# ============================================
# Système de questionnaire
# Important (bug) : On doit stocker l'UUID dans
# une variable avant de l'inclure dans une autre.
# Réalisé pour : Twah2em | Requière : Skript
# ============================================

options:
	guide: Pablo
			
function rp(joueur: player, reponse: text):
	set {_UUID_du_joueur} to UUID of {_joueur}
	send "%{rp.questionnaire.%{_UUID_du_joueur}%.etape}%" to {_joueur}
	send "%{_reponse}%" to {_joueur}
	if {rp.questionnaire.%{_UUID_du_joueur}%.etape} isn't set:
		send "&2{@guide} &9- Bonjour %{_joueur}% ! Bienvenue dans NomDuServeurAChoisir !" to {_joueur}
		send "&2{@guide} &9- Je devine que tu viens d'arriver en ville et que tu as besoin d'argent." to {_joueur}
		send "&2{@guide} &9- Voici donc 800€ pour commencer ton aventure :)" to {_joueur}
		add 800 to {_joueur}'s balance
		send "---------------------" to {_joueur}
		send "&2{@guide} &9- Vous possédez désormais : %{_joueur}'s balance%" to {_joueur}
		send "---------------------" to {_joueur}
		set {rp.questionnaire.%{_UUID_du_joueur}%.attendre_reponse} to false
		set {rp.questionnaire.%{_UUID_du_joueur}%.etape} to 1
		rp({_joueur}, "")
		stop
	# ----------------
	#       Nom
	# ----------------
	if {rp.questionnaire.%{_UUID_du_joueur}%.etape} is 1:
		if {rp.questionnaire.%{_UUID_du_joueur}%.attendre_reponse} is false:
			send "&2{@guide} &9- Choisis le nom de tes rêves que tu auras pendant ta vie dans le rp ! (Tu pourras bien sûr le changer quand tu mourras, mais ne pensons pas à cela tout de suite !)" to {_joueur}
			send "&2{@guide} &9- Tape dans dans le chat le nom que tu veux dans le chat, sans rien avant : " to {_joueur}
			set {rp.questionnaire.%{_UUID_du_joueur}%.attendre_reponse} to true
		else:
			set {rp.%{_UUID_du_joueur}%::nom} to {_reponse}
			send "&2{@guide} &9- Très bien, ton nom est donc %{_reponse}%" to {_joueur}
			set {rp.questionnaire.%{_UUID_du_joueur}%.attendre_reponse} to false
			set {rp.questionnaire.%{_UUID_du_joueur}%.etape} to 2
			rp({_joueur}, "")
			stop
	# ----------------
	#       Age
	# ----------------
	if {rp.questionnaire.%{_UUID_du_joueur}%.etape} is 2:
		if {rp.questionnaire.%{_UUID_du_joueur}%.attendre_reponse} is false:
			send "&2{@guide} &9- Choisis ton âge entre 18 et 120 ans !" to {_joueur}
			set {rp.questionnaire.%{_UUID_du_joueur}%.attendre_reponse} to true
		else:
			set {rp.%{_UUID_du_joueur}%::age} to {_reponse}
			send "&2{@guide} &9- Très bien, tu as donc %{_reponse}% ans" to {_joueur}
			set {rp.questionnaire.%{_UUID_du_joueur}%.attendre_reponse} to false
			set {rp.questionnaire.%{_UUID_du_joueur}%.etape} to 3
			rp({_joueur}, "")
			stop
	# ----------------
	#       Pays
	# ----------------
	if {rp.questionnaire.%{_UUID_du_joueur}%.etape} is 3:
		if {rp.questionnaire.%{_UUID_du_joueur}%.attendre_reponse} is false:
			send "&2{@guide} &9- Choisis ton pays d'origine !" to {_joueur}
			set {rp.questionnaire.%{_UUID_du_joueur}%.attendre_reponse} to true
		else:
			set {rp.%{_UUID_du_joueur}%::pays} to {_reponse}
			send "&2{@guide} &9- Très bien, ton pays d'origine est donc : %{_reponse}%" to {_joueur}
			set {rp.questionnaire.%{_UUID_du_joueur}%.attendre_reponse} to false
			set {rp.questionnaire.%{_UUID_du_joueur}%.etape} to 4
			rp({_joueur}, "")
			stop
	# ----------------
	#   Confirmation
	# ----------------
	if {rp.questionnaire.%{_UUID_du_joueur}%.etape} is 4:
		if {rp.questionnaire.%{_UUID_du_joueur}%.attendre_reponse} is false:
			send "&2{@guide} &9- Tu t'appeles donc %{rp.%{_UUID_du_joueur}%::nom}%, tu as %{rp.%{_UUID_du_joueur}%::age}% et ton pays d'origine est %{rp.%{_UUID_du_joueur}%::pays}%" to {_joueur}
			send "&2{@guide} &9- Tape ""oui"" pour confirmer ces données ou ""non"" pour recommencer le questionnaire : " to {_joueur}
			set {rp.questionnaire.%{_UUID_du_joueur}%.attendre_reponse} to true
		else:
			if {_reponse} is "oui":
				send "&2{@guide} &9- D'accord :) Réponses validées !" to {_joueur}
				set {rp.questionnaire.%{_UUID_du_joueur}%.rempli} to true
				clear {rp.questionnaire.%{_UUID_du_joueur}%.attendre_reponse}
				clear {rp.questionnaire.%{_UUID_du_joueur}%.etape}
				
			else if {_reponse} is "non":
				send "&2{@guide} &9- Très bien. Dans ce cas, répond de nouveau au questionnaire" to {_joueur}
				clear {rp.%{_UUID_du_joueur}%::*}
				set {rp.questionnaire.%{_UUID_du_joueur}%.attendre_reponse} to false
				set {rp.questionnaire.%{_UUID_du_joueur}%.etape} to 1
				rp({_joueur}, "")
			else:
				send "&2{@guide} &9- Réponse incorrect. Veuillez répondre par ""oui"" ou par ""non""." to {_joueur}

on right click on entity:
	if name of clicked entity is "{@guide}":
		if {rp.questionnaire.%player's UUID%.rempli} is not true:
			rp(player, "")
		else:
			send "&2{@guide} &9- Vous avez déjà répondu à ce questionnaire" to player

on chat:
	cancel event
	if {rp.questionnaire.%player's uuid%.attendre_reponse} is set:
		if {rp.questionnaire.%player's uuid%.attendre_reponse} is true:
			rp(player, message)
		
command /pablo:
	trigger:
		spawn a villager at player's location
		set the name of last spawned entity to "Pablo"
		
command /resetpablo:
	trigger:
		set {_UUID_du_joueur} to uuid of player
		broadcast "%{_UUID_du_joueur}%"
		clear {rp.questionnaire.%{_UUID_du_joueur}%.rempli}
		clear {rp.%{_UUID_du_joueur}%::*}
		clear {rp.questionnaire.%{_UUID_du_joueur}%.etape}
		clear {rp.questionnaire.%{_UUID_du_joueur}%.attendre_reponse}